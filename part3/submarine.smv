MODULE emergency
VAR
  air_level: 0..100;
  status: boolean;

ASSIGN
  init (air_level) := 100;
  next(air_level) := case
    air_level > 0: air_level - 1;
    TRUE:     air_level;
  esac;

  init (status) := FALSE;
  next(status) := case
    air_level = 0: TRUE;
    air_level > 0: FALSE;
  esac;

  -- Air level cannot be negative
  LTLSPEC
    G(air_level >= 0)

  -- The alarm fires only when there is no oxygen
  LTLSPEC
    G (status = TRUE -> air_level = 0)

MODULE Crew
  VAR
    role: {captain, sailor};

  ASSIGN
    init(role) := sailor;
    next(role) := case
      role : {captain, sailor}; -- random role
    esac;

  FAIRNESS
    role = captain;
  FAIRNESS
    role = sailor;

MODULE main
VAR
  surface:   { above, under };
  hatch:   { open, close };
  territory:   { friendly, enemy };
  alarm: emergency; --use alarm.status (boolean)

ASSIGN
  init (surface) := above;
  next (surface) := case
		    surface = above & hatch=close: {under, above};
		    surface = under & territory=friendly: {under, above}; --added under here
		    TRUE:                             surface;
  esac;

  init (hatch) := open;
  next (hatch) := case
		    surface = above: {open, close};
		    -- surface = under: close;
		    TRUE:            hatch;
  esac;

  init (territory) := friendly;
  next (territory) := case
		    surface = above: friendly;
		    surface = under: {friendly, enemy};
		    TRUE:            territory;
  esac;

-- === NOT NEEDED ANY MORE ===
  -- init (air_level) := 10;
  -- next (air_level) := case
  --      		    air_level>0: air_level - 1;
	-- 	    TRUE:		 air_level;
  -- esac;

-- DEFINE
--   emergency := (air_level=0);
-- === NOT NEEDED ANY MORE ===

-- LTLSPEC
-- 	G(surface=under -> F surface=above)
	
-- LTLSPEC -- Not working for some reason
-- 	G(surface=under -> hatch=close)

-- LTLSPEC
-- 	G(territory=friendly & surface=above -> next(territory)=friendly)